{
  "version": 3,
  "sources": ["../../../app/components/profile/Grid.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/profile/Grid.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/profile/Grid.tsx\");\n  import.meta.hot.lastModified = \"1706890883849.537\";\n}\n// REMIX HMR END\n\nimport TechUsedDisplay from \"../TechUsedDisplay\";\nexport default function ProfileGrid({\n  stacks\n}) {\n  return <>\n      {stacks === null && <p>Error while getting users Stacks</p>}\n      {stacks !== null && <>\n          {stacks.length === 0 && <div className=\"container1\" style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        width: \"100%\"\n      }}>\n              <div className=\"content\" style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          textAlign: \"center\",\n          alignItems: \"center\",\n          background: \"none\",\n          border: \"0px\",\n          backdropFilter: \"none\"\n        }}>\n                <img src=\"/imgs/icons/plus.svg\" width={\"64px\"} style={{\n            borderRadius: \"100px\",\n            padding: \"1rem\",\n            paddingLeft: \"1.1rem\",\n            paddingRight: \"1.1rem\",\n            border: \"1px solid #171d1c40;\",\n            marginBottom: \"1rem\"\n          }} alt=\"plus icon\" />\n                <span style={{\n            lineHeight: 1.4\n          }}>Create Stack</span>\n                <p>When you create Stacks, they will appear on your profile.</p>\n                <div style={{\n            marginTop: \"2rem\"\n          }}>\n                  <a href=\"/create\" style={{\n              color: \"blue\"\n            }}>\n                    Create your first Stack\n                  </a>\n                </div>\n              </div>\n            </div>}\n          {stacks.length > 0 && <div className=\"cardHolder\">\n              {stacks.map((x, index) => {\n          return <div className=\"card\" key={index}>\n                    <a href={`/stack/${x.stackData._id}`}>\n                      <div className=\"cardContent\">\n                        <img src={`${x.stackData.thumbnails[0]}`} className=\"img-thumbnail\" width=\"415\" height=\"265\" alt=\"stack thumbnail\" style={{\n                  marginBottom: \"10px\"\n                }} />\n                        <div className=\"cardTitleHolder\">\n                          <div className=\"cardTitle\">\n                            <span className=\"title\" style={{\n                      marginBottom: \"25px\"\n                    }}>\n                              {x.stackData.repo_name}\n                            </span>\n                          </div>\n\n                          <div className=\"cardTitleHolder\">\n                            <div className=\"likeHolder\">\n                              <img src=\"/imgs/icons/heart.svg\" width={\"14\"} alt=\"like icon\" />\n                              <p className=\"likeText\">\n                                &nbsp;{x.stackData.likes}\n                              </p>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      {x.techUsedDisplay && <TechUsedDisplay t={x.techUsedDisplay} />}\n                    </a>\n                  </div>;\n        })}\n            </div>}\n        </>}\n    </>;\n}\n_c = ProfileGrid;\nvar _c;\n$RefreshReg$(_c, \"ProfileGrid\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
